<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[计算每月的最后一个工作日]]></title>
    <url>%2F2018%2F10%2F12%2Fworkday%2F</url>
    <content type="text"><![CDATA[​ 最近碰到一个需求：给定了一个日期，要求当月最后一个工作日的日期。 谷歌了半天，发现Excel自带了一个Workday函数刚好可以解决这个问题。那Workday函数是怎么用的呢？ Workday的用法Workday的用途就是，给定一个日期，然后求这个日期指定数量工作日后（前）的日期。 比如说，给定一个日期2007年3月8号，然后求3月8号之后第一个工作日的日期。 具体的语法是：1234Workday(start_date, days, [holidays])- start_date就是给定的日期- days就是给定日期之前（之后）工作日的天数- holidays是可选参数，是一个表示假日的区域引用 例如，上面的这个例子，就可以这样来写： 如果需要把节假日考虑进去，那么就需要加入holiday参数。 当月最后一个工作日的思路整体思路框架是： 获取下个月第一天（使用Date函数） 然后用Workday,指定下个月第一天前一个工作日 剔除节假日 这里需要用Date函数，配合Year, Month函数来构建下个月的第一天，然后向前数一个工作日。 这样，就可以实现前面的需求了！]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>Excel函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SIMPLEX线性回归算法]]></title>
    <url>%2F2018%2F10%2F12%2Fsimplex-LP%2F</url>
    <content type="text"><![CDATA[​ 引子在用Solver的时候，经常会碰到碰到这么几种选项： GRG Nonlinear Simplex LP Evolutionary 每个选项背后都隐藏了相对应的算法。平常我们一般直接运行Solver，不需要考虑算法怎么来的，但最近碰到一个问题，需要手动用Simplex算法来求解。 Simplex算法背后是什么呢？大概查了一下，是对应的矩阵变换，然后迭代求解。具体运算暂时没有完全弄懂，只是在下面讲一下用Excel表格来求解的步骤。 Simplex步骤我们用一个例子来说明，如下： 加入松弛变量题目给出了几个不等式，在求解之前，先要添加一些辅助参数，把不等式变成等式。 由于限制条件里有3个方程，因此需要添加3个辅助变量，这3个辅助变量都大于等于0，我们把它分别叫做s1,s2,s3 这3个变量再加上本身就有的x1, x2,我们就得到了这样一个矩阵形式： 要优化的目标可以表达成这样的向量形式： 我们把目标向量叫做cj 构建迭代表格Simplex是通过矩阵不断迭代运算得到最终优化结果的，在这里需要一个迭代表格。这个表格长的这样子： 这里面有几个点： basic variable最开始要设置为前面加入的松弛变量s1,s2,s3，后面，随着迭代的进行，这3个变量会逐步被替换掉 cbi对应的是每个变量在cj中对应的系数。例如，s1,s2,s3在cj中都是0，因此cbi这里都是0 zj是cbi这个向量和每一个 variable所对应的列，作矩阵相乘运算，得到的结果。下面这个图显示的是x1变量对应的列和cbi相乘的结果。 最下面一行是cj-zj,也就是把两个矩阵相减。对于一个求最大值的问题，迭代停止的条件就是cj-zj所得到的矩阵每一个元素都小于等于0。 进行迭代上面一张图我们看到，cj-zj这个矩阵，并不符合停止迭代的条件，于是要继续进行下一次迭代。 下一次迭代需要更换basic variable,换哪个呢？ 我们查找上一次迭代中，cj-zj中最大的元素，也就是3： 把3对应的这一列作标记 然后在上图表格中的ratio列，计算solution除以3这一列对应的值,我们求最小值，在这里也就是3.5 把最小值对应的一行作标记 我们看到，标记的列，对应的是x2变量，标记的行，对应的是s2变量。 于是，我们在basic variables中把s2去掉，x2加上,并且把x2在cj中对应的系数更新到cbi中，变成下面这个表格 然后计算表格中各个变量对应的数值。对于新加入的x2变量，直接用原有数值，除以上一步中标记的行和列的交叉值（在这里是2）即可。 对于上一次迭代就存在的变量(在这里是s1和s3),他们的值要用这样一个公式：这里直接用图来表示吧： 然后按照上面一次迭代中所讲的，计算cj-zj这里我们发现cj-zj中依旧有一个值大于0，对应x1变量，s3变量对应行的ratio最小，所以下一步就要把s3替换成s1. 再进行一次迭代按照上面的步骤，重复一次迭代，得到下面结果： 这次，cj-zj这个矩阵符合要求了，迭代停止。 答案在哪里呢？ 迭代停止的时候，basic variables所对应的solution的值，就是这些变量的最优解。basic variables里面没有的变量，也就是其他变量，都为0。 于是，有了变量的值，再加上变量的系数（cj矩阵），我们就可以计算出最终的优化值了。 总结上面是一个照猫画虎的过程，原理后面需要做详细探讨。]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>线性回归</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[单一指数模型的Excel实现]]></title>
    <url>%2F2018%2F08%2F27%2Fsim-with-excel%2F</url>
    <content type="text"><![CDATA[​ 前文回顾 单一指数模型SIM Excel的实现我们说过，单一指数模型的公式是这样子的： 如果大家做过回归分析的话，就可以看出来，这个公式实际上就是最小二乘法进行的回归曲线。 于是，我们可以利用Excel的LINEST函数，来实现SIM法求协方差矩阵。 求相关参数我们在前面的公式知道，如果是要求协方差矩阵，只需要知道这么几项就可以： 每一项资产的β和对应残差的标准差σ 市场组合的方差 求资产的β和σ，可以使用LINEST函数，选定5*2的区域，进行线性回归： 注意上图中的数据已经经过预先处理，定义好了名称区域 使用数组公式进行LINEST求解 得到的一个5*2的矩阵，每一个矩阵元素对应的是什么呢？ 我们可以看到，5*2矩阵中(1,1)位置就是β，(3,2)号位置是残差的标准差σ。 上面只是求了600825这个资产的β和残差的σ，如果想对每一个资产进行求解，需要配合使用INDEX函数。 最后使用VAR函数，求出市场的方差。 求协方差矩阵有了上面这些数据，我们就可以计算协方差矩阵了。 在对角线位置，使用这个公式： 在其他位置，使用下面这个公式，并结合HLookup函数： 最后得到协方差矩阵为：]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>单一指数模型</tag>
        <tag>金融建模</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[单一指数模型]]></title>
    <url>%2F2018%2F08%2F27%2Fsingle-index-model%2F</url>
    <content type="text"><![CDATA[​ 前文回顾 系统风险β的引入 CAPM模型 CAPM模型的局限前面我们在讲CAPM模型时，说到其公式反应了主要是系统风险，资产的超额收益完全是跟着市场走。 但是，我们知道市场里的不确定性简直太多了，仅仅靠一个β来说明未免有些牵强。最好还要有非系统性风险(firm specific)的体现。另外，传统的计算资产组合收益的方法，需要计算资产两两组合的协方差。当资产数量上升后，需要计算的资产组合数量急剧上升，N个资产构成的组合P，要计算P的均值和方差需要计算N(N-1)/2次，也就是说，这种方法的计算复杂度为O(n2)。 单一指数模型，改善了上面两点。针对第一点，单一指数模型引入了非系统性风险，以及不受市场波动影响的部分。针对第二点，单一指数模型通过把市场指数和每项资产关联起来，相当于给每项资产之间架起了一个枢纽，这样可以大大减少了计算协方差矩阵的计算量。 单一指数模型(Single Index Model)单一资产方差的计算这个模型中，资产的收益可以表达成下面的形式： 如果用R表示超额收益，那么可以简写为： 其中， α表示资产独立于市场波动的收益 β表示资产的系统性风险 e表示资产特有的风险 当然，每个模型的提出都需要假设： 系统性风险和非系统风险完全不相关，即协方差为0 不同资产的e相互完全不相关 在这种情况下，我们可以把一项资产看做是由α，Rm，以及e组成的资产组合。资产的方差就可以这样计算： 这个公式就能看得出来，总风险=系统风险+公司特定风险 协方差计算如果要计算协方差，需要通过Rm这个中介来换算。 123456789r_&#123;i,m&#125;= \frac&#123;\sigma _&#123;i,m&#125;&#125;&#123;\sigma_&#123;i&#125;\sigma_&#123;m&#125;&#125; r_&#123;j,m&#125;= \frac&#123;\sigma _&#123;j,m&#125;&#125;&#123;\sigma_&#123;j&#125;\sigma_&#123;m&#125;&#125; \sigma _&#123;i,m&#125;=\beta_&#123;i&#125; \sigma _&#123;m&#125;^&#123;2&#125; \sigma _&#123;j,m&#125;=\beta_&#123;j&#125; \sigma _&#123;m&#125;^&#123;2&#125;r_&#123;i,j&#125;= \frac&#123;\sigma _&#123;i,j&#125;&#125;&#123;\sigma_&#123;i&#125;\sigma_&#123;j&#125;&#125; 综合上面的公式，可以得到： 于是，我们看到，知道了资产的β系数之后，再加上市场的方差，就可以很容易求出资产之间的协方差了。 资产组合的收益与风险如果一个资产组合P里有N项资产，那么P的加权超额收益期望为： 于是，我们可以得到组合P的β值为： 如果n比较大，e的部分可以忽略不计，因此可以得到： 对于组合P的方差，可以这样计算： 其中： 当然，上面这个公式的得出基于不同公司的非系统风险相对独立。我们可以看到，当n趋向于多时，非系统风险的方差贡献几乎为0，因此非系统风险得到了分散。 再极端一点，我们买入全部的市场组合，那么β就是1，P的方差就等于市场M的标准差。 有了单一指数模型之后，根据上面的公式，如果再要计算一个组合P的均值和方差，那么我们只需要： 计算n次α 计算n次β 计算n次e的方差然后简单的做一个加权或者加法就可以。这样计算复杂度就下降到了O(n)。比开头的方法整整少了一个数量级。 单一指数模型的局限 SIM模型的假设有时未必成立，因此计算精度会受到影响。比如，其假设每个公司的ei相互独立，但实际上同一个行业内的公司ei很有可能是有正相关关系的。 参考文献：https://wenku.baidu.com/view/b18142bf336c1eb91b375df5.html?from=searchhttps://wenku.baidu.com/view/46e7231b9ec3d5bbfc0a74c5.html?from=search]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>单一模型</tag>
        <tag>协方差</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资本结构概论]]></title>
    <url>%2F2018%2F08%2F27%2Fcapital-structure%2F</url>
    <content type="text"><![CDATA[​ 完美市场下的资本结构什么是perfect markt ? 没有税(公司和个人税) 没有交易成本（类似的破产成本以及其他） 没有信息不对称 除了上面perfect market的假设以外，还有两点重要的假设： 公司的价值，与资本结构无关，同理，公司的股价，也无资本结构无关 借贷会导致权益成本提高 最终的加权成本不变 这上面就是MM理论了，怎么来解释呢？ 大概的意思就是，我要投资100块钱出去，不管我借20，还是借80块，还是完全自己出资100块，我都会投资。因此资本结构并不能决定公司的价值。 公司价值与资本结构无关这个理论认为，公司的价值，只和公司能够创造多少收入有关。公司的价值就等于： 因此，不论资本结构如何，公司整体价值都是不变的。 其中，Vu是指无杠杆下公司的价值 Ksu是指无杠杆的权益成本 EBIT就是普通的息税前利润 借贷会导致权益成本提高如果公司从自有资本转向借贷，那么公司股东会认为公司经营的风险升高，于是相应的权益成本的期望也会提高。 那么权益成本会提高多少呢？ Vsl是权益价值 Ksl是杠杆后的权益成本 Kd是负债成本 D是负债 又因为 EBIT/Ksu = S+D，并且公司价值不随资本结构的变化，因此： EBIT=（S+D)*Ksu 再带入上面的公式中，就可以得到： 如果用这个计算加权成本wacc，可以这样来计算： 因此，加权平均成本不变，就等于无负债的权益成本 上面是不存在任何税的情况下，得到的结论。那么，如果有公司税的存在会是怎么样呢？ 非完美市场下的资本结构我们在这里先考虑只有公司税Tc的情况。 在有公司税的情况下，没有贷款和有贷款公司的价值表示如下： 可以看出，有借款的情况下，除了正常的无杠杆的现金流部分以外，还产生了与负债相关的一个现金流。 正常现金流折现，得到的价值就是Vu.而负债相关的现金流部分，需要用kd来折现，得到的结果就是DTc.而根据估值的打包资产相加理论： VL = Vu + DTc 也就是说，有杠杆的公司价值等于无杠杆的价值加上税盾。 举个例子，上面这个可以这么理解：公司的价值等于其相对于债权人和股东合起来的价值。 如果不借贷，其相对于股东的价值就是EBIT(1-Tc)。 如果完全借贷，其相对于债权人就相当于是EBIT，明显有价值上的提升。 个人感觉税盾更多是从经济层面上来考虑，不赚就是损失，少付就是赚钱，不知道理解的对不对 在有公司税的情况下，MM定理的第二个结论，也就是有杠杆的权益成本可以用如下方式进行推导： 可以看出，如果Tc=0，那么这个公式就和前面无税的公式一样了。 有了Ksl之后，WACC也可以计算出来了： 从结果我们可以看出来，一般Kd是小于Ksu的，因此，在只考虑公司税的情况下，举债可以降低加权资本成本。 上面基本上就是MM模型的两个定论了。 后来，米勒又在这个基础上，针对有公司税和个人所得税的基础上，又进行了论证，称之为米勒模型 考虑个人所得税先做几个名词解释： Tc: 公司税Td: 个人所得税税率Te: 权益收益税率 在这个模型里，就直接上公式推导了： 也就是说，当考虑个人所得税和权益所得税时，举债不一定能提高公司价值。这得看1-Td和(1-Tc)(1-Te)的值哪个大。 然后根据这个公式，可以推出来： 参考文献https://en.wikipedia.org/wiki/Modigliani%E2%80%93Miller_theorem#Proposition_II]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>资本结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DCF中的NOPAT]]></title>
    <url>%2F2018%2F08%2F27%2Fnopat%2F</url>
    <content type="text"><![CDATA[​ 在使用DCF的时候，初次使用NOPAT作为基础来计算FCF，总是觉得有些懵。为什么要直接把EBIT*(1-Tc)呢？应该是先扣利息，再扣税啊。 这里就来研究一下。 我们说，一个企业的FCF就是企业能够用于经营的，自由支配的现金流。 那么，追根溯源，企业的FCF都可以从哪里来呢？ 计算FCF的基础首先当然是净利润：Net Profit如果要非得深究的话，其实利润表里的净利润，不一定代表就是现金。不过这点可以通过后面进行调整。 然后要把付出利息加进来。因为利息虽然最终付给债权人了，但他还是属于公司可以自由处理的现金的一部分。 那么要加上多少利息呢？如果把支付的利息定义为I，那么由于利息的税盾作用，税盾的值为I*Tc,那么实际支付的利息就是： 1I(1-Tc) 所以，Net Profit + I*(1-Tc)就成为我们计算FCF的基础。 后面需要再加上折旧，减去NOWC的变化，减去CAPEX，这些就不做说明了。 NOPAT的得来我们知道：1Net Profit = (EBIT-I)*(1-Tc) = EBIT*(1-Tc) - I(1-Tc) 把这个等式移项，就能得到： 1Net Profit + I(1-Tc)= (EBIT-I)*(1-Tc) 巧合的是，Net Profit + I(1-Tc)正好是计算FCF的基础。于是，把(EBIT-I)*(1-Tc)定义为NOPAT，就可以替代Net Profit + I(1-Tc)来计算FCF。 所以，在讲DCF的时候，有些书是先计算NOPAT，有些书对NOPAT只字未提，只从净利润出发。其实这两种方法是一样的，只是表现形式不同而已。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>估值</tag>
        <tag>DCF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[债券定价原理]]></title>
    <url>%2F2018%2F08%2F27%2Fbonds-pricing%2F</url>
    <content type="text"><![CDATA[​ 前文回顾前面介绍了： 普通债券的价格计算原理 使用Excel计算债券价格以及收益率 根据债券价格的计算公式，我们可以得到债券定价的5个原理，也被称作是马尔基尔原理。 债券的定价原理为了研究债券的定价原理，我们首先根据债券的YTM(Yield to maturity)以及价格来做一个Excel的数据表： 数据表(Data Table)是Excel中用于分析变量敏感度的一个很有效的工具 数据表里有两个变量：一个是YTM，一个是债券的年限。数据表的YTM作为横坐标，不同年限，对应YTM的价格作为纵坐标，做散点图，可以得到上图右边的一个图。 观察这个图，我们就可以来证明债券定价的原理。 债券价格与利率呈反向变化首先，我们很容易观察到YTM下降，债券价格将上升。这个也就是第一条法则：债券价格与利率呈反向变化 对于一定收益率的变化，长期债券的价格变化大于短期债券的价格变化这点也可以通过图来直接看出来。 无论债券期限多长，在YTM在0.08时，债券的价格都等于1000，即面值。 如果YTM从0.08降到0.01，我们可以看到，所有债券的价格都在升高，但50年债券的价格增长的最大。这个也和定理吻合。 随着债券年限的增长，债券价格对收益率的变化的敏感性将增加，但增加的速度不断下降这句话的前半句其实已经证明过了，年限越长的债券，对收益率的敏感度越高。 那么后半句怎么理解呢？ 简单点从图上来观察的话，发现随着年限的增加，在1%点的截距越来越密，也就是说，债券价格增长的速度在下降 债券价格的不对称性这个从图上也不难看出。YTM从8%到1%，债券价格上升的金额明显要大于利率从8%上升到15%，债券价格下降的金额。 高票面利率债券对YTM变化的敏感性大于低票面利率债券为了证明这点的话，上面的图就不适合了，需要生成一组新的数据： 从图中标橙色的可以看出来，的确票面利率越低，对YTM变化的敏感性越大。 如果把上面的数据做散点图，似乎图与上面的结论相悖： 图的横坐标是YTM，纵坐标是不同票面利率对应的价格。明显可以看出，票面利率越高，相同YTM的变化所对应的债券价格的变化越大。 但是，我们在这里讨论的敏感度是变化百分比。因此，虽然高票面利率债券的变化的绝对值大，但他的百分比还是要小，这点要注意。 总结这5条定理从数学根源上，是对价格-YTM进行求一阶导数和二阶导数的出来的，在这里，我们先要知道结论，证明过程后面再研究。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>估值</tag>
        <tag>债券</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[债券估值]]></title>
    <url>%2F2018%2F08%2F27%2Fbonds%2F</url>
    <content type="text"><![CDATA[​ 债券的特点前面讲的一直是普通股以及优先股的估值。在可供我们投资的产品中，还有一种，就是风险相对低的债券。风险低到什么程度呢？在很多情况下大家都会以美国的国债作为无风险收益率。基本上来看，债券有这个几个特点： 发行人定期支付利息 债券到期偿还本金 发行价格可能会有溢价或者折扣 公司破产清算时，债券优先于股票得到赔偿 债券价格的计算根据上面的债券特点，我们就可以根据资本的现值和终值理论，来对债券的价格和价值进行计算。 付息日债券价格的计算为什么这里要分付息日和非付息日？因为在付息日那天，剩余的期数刚好为整数，正巧可以使用Excel自带的PV函数。 我们先看一个债券的时间线： 根据我们前面在PV和FV那一课讲的内容，债券的PV可以用这个公式来计算： 这里： PMT就是债券每次发的利息 kb实际上是我们对债券的要求报酬率 FV是债券的面值（如果我们一直持有到期的话） N就是还剩下的期数 于是，我们就可以直接使用Excel自带的PV函数来计算了。 下面这个使用Excel对一个为期20年，每年付息2次，票面年化利率为8%，而个人要求报酬率为9%，面值为1000元的债券进行了计算，用PV函数求出了发行之初的价值： 非付息日债券价格的计算如果是非付息日的话，就不可以使用PV函数来计算了。这个时候应该采取这种思路： 计算出离当日最近的上一个付息日 然后利用上一个付息日的现值，计算出当天的终值 然后用当天的终值减去从上一个付息日到当天所应获得的利息 看起来相当繁琐，我们试着用Excel来实现一下。 还是上面那个例子，付息一共40期，每期半年，那么我要计算从债券发售开始，过去两个月（也就是还有39 2/3期）的时候，债券的价格。 首先，我们应该计算离到期还有40期的价格（因为39 2/3最近的付息日就是40期的时候）。前面已经计算出来等于907.99 然后，从40期的价格推算到39 2/3的终值计算出来等于921.41 上面计算出来的921.41包括了2个月的利息，需要扣除掉，才能得到债券的交易价格。2个月的利息就是1000*0.08/2/3=13.33 然后用921.41减去13.33即可得到当日的价格 使用Excel进行债券价格计算上面这种方法，虽然逻辑很清晰，但过程需要好几步，实现起来蛮复杂。Excel里自带了一个PRICE函数，可以帮助我们实现。 在这里直接上图了。PRICE函数包含几个参数： Settlement指的是买入债券的日期 Maturity指的是债券到期的日期 Rate指的是票面利息 Yield指的是要求报酬率 Redemption指的是到期时，回购价格与票面价格的比例。注意这个是一个百分数 Frequency指的是债券每年付息的次数，只有1,2,4三种选择 Basis指的是对天数的假设。默认为0，也就是一个月有30天，一年有360天。 最终得到的一个数值，是与票面价格相比的百分数。这里可以看到是90.80，再乘上票面价格就是债券的价格。 债券收益债券收益是投资债券时一个很重要的指标，也是后面研究收益-价格曲线的一个基础。在这里我们主要研究一下两种收益： 到期收益率也就是债券持有到期的年化符合报酬率。 其实，在前面学习PV和FV的时候，我们知道相对应的还有RATE函数，用于求收益率。对于债券也是一样，不过债券的计算使用的是YIELD函数。 里面参数的定义和PRICE函数差不多，唯一要注意的是，PR是一个相对于面值的百分比。 如果再回想一下资本预算时计算IRR时遇到的问题，这种计算到期收益率也会有类似的问题： 默认收到的股息会按照要求报酬率复投，没有考虑Reinvestment risk另外，到期收益率默认持有到期，但没有考虑不到期就出售的情况。 赎回收益率与到期收益率的计算方法类似，赎回收益率的计算同样适用YIELD函数，只是将PR修改为债券被赎回时的价格百分比(一般都大于100)即可。 总结 债券价格的计算，无论采用哪种方式，都是基于PV和FV理论 PRICE和YIELD函数可以轻松计算债券的价格和收益率]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>估值</tag>
        <tag>债券</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DCF法估值]]></title>
    <url>%2F2018%2F08%2F27%2Fdcf%2F</url>
    <content type="text"><![CDATA[​ 前文回顾 使用DDM法进行估值 DCF法前面说的DDM法，包括了3个模型，基本上是假定我们会永久持有股票，股票的收益都来自股利。 但是，在很多情况下靠股利来获利并不是那么靠谱的一个方法。所以我们得想个别的方法来估值。 一个最核心的理论基础是：企业(这里指的是整个企业，不仅仅包括股票所体现的价值)的价值，就等于未来现金流的折现，加上非营业资产的价值。于是，我们只要能弄清楚前面所说的几个问题： 现金流有多少 现金流在什么时候 资本成本有多少 非营业资产有多少 关于资本成本，实际上我们前面在DDM法里已经研究过了。折现的逻辑，DDM和DCF也差不多。于是，我们接下来首先要研究现金流的数量问题 营业资产的FCF折现法我们在折现模型中要研究的现金流，是指企业可以自由支配使用的现金流，也叫自由现金流(Free Cash Flow)。 如何计算自由现金流呢？ 先计算出NOPAT(Net Operating Profit After Tax)，也就是EBIT扣税后的部分。 你可能会问了，为什么不先扣除利息啊？这个道理和资本成本中不考虑利息的道理类似，因为我们在折旧系数里已经考虑了利息，也就是资本成本的影响。 122. 然后加上非现金费用。为什么要机上呢？因为NOPAT是从利润表里的出来的，在计算的过程中扣除了固定资产成本等非现金费用，并没有付出现金。因此，这里需要再加上去。 ```营业现金流=NOPAT+非现金费用 有了现金流之后，为了维持企业的正常运转，需要进行投资。投资性支出又可以分成两类：用于固定资产的投资，以及用于流动性较强的资产的投资，体现为净营运资本的变化。这两个合起来，就是： 于是，总的自由现金流就等于： 于是，根据现金流折现出来的公司价值就可以计算为： 非营业性资产的影响上面计算的其实都是营业资产折现而得到的公司价值。当然，公司还有非营业资产。于是，公司整个价值等于营业和非营业资产的相加。 另外一种思路是，公司的价值等于公司债券，加上普通股，再加上优先股的价值的总和。因此，公司整个价值还可以这样计算： 于是，普通股所有的价值就等于： 然后再确定一下发行的普通股的数量，就可以得到普通股的内在价值了。 实际上，上面这个公式默认的是自由现金流永续增长。当然，类似与DDM的二段和三段模型，DCF法也可以采用类似的方法进行营业资产的估值。 总结 从这个可以看出，货币的时间价值这个知识点很重要]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>估值</tag>
        <tag>现金流折现</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DDM估值]]></title>
    <url>%2F2018%2F08%2F27%2Fddm%2F</url>
    <content type="text"><![CDATA[​ 估值这个事情，不知道有多少人前仆后继的研究。毕竟，有一个准确的估值模型就可以发家致富了。然而现实生活中并不是想象中那么美好，估值理论一大堆，到底如何使用就见仁见智了。今天就来开始研究估值的模型。 价值的分类 账面价值(Book Value)理论上讲就是指资产的初始价格减去折旧 内在价值(Intrinsic Value)指的是资产对应投资人来说的实际价值。内在价值其实就相当于是股票未来可以产生的现金流的现值。提到现值，就必须要提到折现率。每个人折现率不同，股票对每个人的内在价值也不同。 市场价值(Market Value)其实也就是市场的交易价格。交易价格经常偏离其实际内在价值，因此会产生套利空间。 市场价值，也就是公允价格每天都可以看到，但股票的内在价值却是很难判断。因此，我们在这里所说的估值，就是要估股票的内在价值。 另外，股票也分两种，普通股和优先股，我们先来研究普通股。 基本思想上面说了，股票估值实际上就是把未来的现金流折现成现值。那么我们就有几个问题了： 未来哪年会有现金流？ 未来的现金流有多少？ 折现率到底是多少？ 有了上面三个数据以后，我们就基本可以按照PV-FV的关系来进行折现了。 基本的一个公式是： 未来的现金流这个东西，基本靠半算半猜(这也是估值的一个最大难点)，靠的是对公司的理解。而折现率相对比较好算，CAPM模型里准备了一个证券市场线SML，可以根据股票的历史β值(当然更精确的是先对历史β值进行校正)，市场的收益rm来计算股票的预期收益。公式如下： 求出来折现率之后，我们就假设(注意是假设)我们会知道企业未来的现金流，然后我们就可以引用先人的智慧进行估值了。 DDMDividend Discount Model，也就是将未来的股利进行折现。我们前面也说过，普通股的股东主要靠两种方式赚钱：拿股利以及转让股票。转让股票相当于是在期末的一个额外终值，在这里，我们先假设我们要长期持有股票，并不转让（没错，把股票传给下一代。。。），仅从股利的层面来考虑。 永续增长假设第0年的股利为D0，股利以后每年增长g，折现率，也就是普通股的权益成本为k，那么，这就相当于是一个永续增长的年金模型。 我们用前面的年金知识，很容易可以得到： 如果N趋向于无穷大(接盘侠接一辈子盘。。。)，那么这个公式求极限就变成： 两段模型上面这个公式看起来很简单，然而，过于理想化。最典型的问题在于，很难保证股利永远维持g增长一辈子。 于是，为了优化的更实际一点，我们把增长分为2段： 以g1的增长率增长n年 然后以g2的增长率永续增长 在这种模型下，股票的现值就等于这两种增长现值的相加。 我们在上面计算了第一阶段增长的现值。第二阶段的现值我们要分两部分计算： 第二阶段折合到第n年的现值 第n年的现值再转化成第0年的现值 综合上面，可以得到(不多做解释了，详情参考货币的时间价值那一章)： 三段模型上面这个看起来更合理了，但还是不够现实。因为从g1到g2的转化太过突然，正常情况下应该是缓慢由g1过渡到g2的。 于是产生了3段模型： 以g1增长n1年 然后增长率线性从g1变化到g2 从第0年开始，n2年后，增长率变为g2 经过推算（反正我是没推算出来），最终的公式应当是： DDM法的问题DDM法看起来很有道理，但实际上真正的估值很少用这种方法。就拿中国来说，有几个公司发放股利呢？如果一直不分红，那估值岂不是为0？所以，我们还需要采用其他方法来进行估值。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>估值</tag>
        <tag>股利</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CAL,CML和SML]]></title>
    <url>%2F2018%2F08%2F05%2Fcapital-market-line%2F</url>
    <content type="text"><![CDATA[​ 前文回顾前面我们重点研究了： 不含Rf的有效边界的计算 包含Rf的有效边界的计算 在上一篇的最后，我们做出了一个资产组合A与无风险组合Rf配置，所得到的均值-方差线，这条线长的是这个样子： 实际上，图中的这条红线还有个专业的名字，叫做资本配置线(Capital Allocation Line) 资本配置线为什么上面这条红线叫资本配置线呢？ 红线的左边端点，代表所有资本都投入了Rf。 红线右边的A点，代表所有资本都投入的风险资产，没有一分钱投入到了Rf上。 那么，红线上的部分，就代表了一部分投入到Rf，一部分买入风险资产A的情况。这条线就代表了对于Rf和A资产的资本配置的情况。前面说过了，有些人投资愿意选A，但有些人能承担更高的风险，也追求更高的收益，我们假设他们能接受B点的资产组合。 于是，如果B资产与Rf组合，又会得到一条新的线： 也就是说，任何一个资产，与无风险资产进行组合，都可以得到其对应的资本配置线。因此，资本配置线是有无数条的。 市场资本线(Capital Market Line)假设我有了市场上所有资产的价格信息（仅仅是假设），于是我可以做出一条包含了市场上所有资产的有效边界。 如果我在有效边界里任选一个投资组合，配上无风险资产，那么根据上一节的内容，我们可以通过这个公式来计算收益： 每个人投资，当然期望收益能最大。那么在风险σp一定的情况下，我只需要在有效边界上找到一个点，这个点的(ra−rf)/σa最大即可。 因此，这个问题就转化成了：从Rf为起点做一条直线，这条直线与有效边界相交，求这条直线的斜率在哪种情况下最大？ 没错，就是直线和有效边界相切的时候，斜率最大。 这里就引出了另外一个假设：市场上的投资者都很理性，他们都会购买斜率最大这一点的资产组合(就当是假设就好，实际上基本不可能)。 在图像上，就是这样表示，M点就是切点： M点与Rf点连成的线，就是市场资本线(CML)。可以这么理解，CML就是在无数条CAL中，选出收益/风险比最大的一条。因此，CML只有一条。 M点就被称为市场组合。市场组合有这么几个特点： 包括市场中所有的风险资产 不包括任何无风险资产 我们把上面的公式中的某个特定资产A换成市场组合M,就可以得到公式： 我们说过，M点是CAL中斜率最大的一点，实际上，这个斜率还有一个名字，叫做夏普比率(Sharp Ratio)，定义如下： 于是，很容易就能得到，CML是Sharp Ratio最大的一条线，也应该是收益/风险最优的一条线。 市场证券线(Securities Market Line)从上面的推导得到一个市场组合M后，假设我们又选中另外一个资产P，与M进行组合，那么： P与M资产构成的有效边界一定与M点的CML线相交(因为如果P的权重为0，就纯粹是选择M，M点一定在CML线上) P与M构成的有效边界与CML只有一个交点(因为所有有效边界必定在CML的右下方，因此与CML最多就只有一个交点) 如果此组合中P的权重为α，M的权重为1-α，那么α=0时，即为市场组合M。 在这种情况下，利用均值-方差理论求M点的斜率，也就是对P和M的组合在α=0处求微分： 当然，M点的斜率还可以直接用前面Sharp Ratio来得到，于是： 我们定义β为： 于是就得到了一个资产定价模型(Capital Assets Pricing Model)的公式： 根据这个模型，资产组合的收益率等于无风险收益率加上风险溢价。无风险收益率就是公式中的Rf,风险溢价就是右边的部分。 仔细观察公式的风险溢价部分，我们发现有两个地方存在不确定性(风险)： Rm，也就是市场的风险，是系统性风险 β，也就是单个股票相对于市场风险的相关程度，也是系统性风险 我们前面所说的通过分散投资来减少风险，可以减少的是非系统性风险，市场风险是没办法分散的。 通过观察上面CAPM的公式，我们发现，Rp相对于β来说也是线性关系。因此，我们以β为X轴，Rp为Y轴，继续做散点图，就可以得到证券市场线(SML)。 最终做出的SML形状大致是这样子： SML曲线反映的是资产系统性风险与收益的关系，对整个市场内的资产（包括组合）都适用。如果某项资产的β-收益点位于SML上方，就代表其在同等市场风险条件下，收益更高，相当于被低估了。反之，资产被高估。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>投资组合</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资产组合的有效边界]]></title>
    <url>%2F2018%2F08%2F05%2Fefficient-frontier%2F</url>
    <content type="text"><![CDATA[​ 前文回顾 协方差的概念 方差/协方差矩阵 资产组合标准差的计算 有效边界会计算资产组合的标准差和期望以后，我们就可以按照自己的想法来调配各种资产，形成组合，然后再计算期望收益和风险了。 作为风险厌恶者，一般的投资人基本都会有两个想法： 风险一定，选择收益最大的组合 收益一定，选择风险最小的组合 假设有下面的资产，我们求出了协方差矩阵： 一般来说，我们采用确定收益率，并把标准差最小化的方法，于是我们给出一个资产组合权重表，每个组合对应的权重，以及整个组合的期望和标准差用公式先计算出来： 然后在第8列指定目标的收益率。 然后用规划求解就可以计算出最终的权重。规划求解的条件是： 权重合计为1 目标收益率等于组合的收益率期望 标准差要最小 允许卖空 于是可以得到8个资产组合的最优化的标准差和期望。上图中已经给出了计算结果。 我们把8种组合，以及4种资产自身的标准差为横坐标，收益率为纵坐标，做散点图，得到下面的图表： 图中的蓝线和红线表示资产组合对应的风险-收益曲线，明显可以看得出，红线部分相对于蓝线部分，在同等风险的条件下，蓝线上的收益更大。 于是乎，蓝线这部分，就被称为这4种资产的有效边界(Efficient Frontier)。这代表着，对于特定的风险来说，蓝线上的点是可以达到的最大的收益。 这个有效边界里的资产都是有风险资产，现实生活中还有一种很重要的资产：无风险资产，比如说国债和银行利息。如果把无风险资产也引入，有效边界会是什么样子？ 包含无风险资产的有效边界使用Excel进行计算类似的，我们把年化收益为7%的无风险资产加入到资产组合中： 然后依旧使用规划求解，确定几个收益点，使其标准差最小化,得到一张新的图： 我们看到，无风险资产(Rf)的引入，使有效边界变成了一条直线，直线的截距即为Rf，意味着这时，资产组合里只有无风险资产，标准差为0，也就是没有风险。 另外，非常重要的一点，Rf的引入，又进一步优化了投资组合的有效边界。原先不包含Rf的有效边界，都落在包含Rf的直线的下方，代表着在相同收益的情况下，引入Rf有效的降低了风险。 那么，为什么加入Rf之后有效边界会是一条直线呢? 直线的由来我们刚才求出了不考虑Rf的情况下，资产组合的有效边界。这条边界是数学上最优化的模型，但如果要具体选择线上的哪一点对应的资产进行投资，每个人就见仁见智了。 比如说，下面这条有效边界有两个点，分别对应不同的风险和收益。 A与B相比较，A的风险比B小，收益也比B小，但有的人追求稳妥，最终会选择投资A，也有的人追求收益，会选择投资B。 但不管投资A还是投资B，都相当于是投资了某个特定的资产组合。这里的特定，是指资产组合里各个资产的权重已经确定了。那么，如果把这个特定的资产组合看做是一个整体，他也有自己的期望，和方差，也就是收益和风险。 如果此时再把Rf引入，我们相当于是把模型简化成了2个资产组合，这两个资产，一个为无风险，一个为点A对应的资产组合。 具体推导过程如下图： 最后，得到的公式是： 显然，这是一条截距为rf的直线，在图中表示如下：]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>有效边界</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资产组合]]></title>
    <url>%2F2018%2F08%2F05%2Fportfolio-management%2F</url>
    <content type="text"><![CDATA[​ 前言多数人应该能看懂这张图所阐述的道理： 鸡蛋不能放在一个篮子。同样一句话说，投资不能都投在一个资产上。这里更多的是从风险上考量，每种资产都会有风险，一旦风险真的变成了坏账，分散性差的投资就全军覆没了。 合理的分散投资，可以在维持收益不变的基础上，降低投资风险。 当然，如果你把资本分散投入到高风险资产，最后也有可能狗带.说到这里，不由想起来一个笑话： “自从跟网贷大佬们学会了分散投资，鸡蛋不要装在一个篮子里，聪明的我把资金分散放到了下列平台：投融家、钱妈妈、银票网、善林金融、唐小僧、联璧……结果现在所有维权群里都能看到我的身影。” 投资最核心的是两点：收益和风险。多数投资者应该都是风险厌恶性(Risk Averse)的，因此，如果承担的风险越高，所期望的收益应该越大。 那么怎么来衡量资产的收益和风险呢？现代的资产理论有一个核心的理论基础： 投资组合的收益，可以通过组合的统计期望来表示 投资组合的风险，可以通过组合的标准差来表示 于是，统计学就派上用场了。 投资组合的期望假设一个资产组合中包括了N项资产，那么和之前计算加权平均资本成本（WACC）一样，投资组合的期望收益可以通过一个简单的加权公式来计算： 其中： 统计学的期望其实就是线性求加权平均值，因此这个公式适用于任何数量的资产构成的资产组合。 投资组合的标准差统计学上，什么是标准差？ 标准差实际上是对样本的数据点偏离统计期望的程度的表示。如果用公式来表示： 既然标准差的计算公式并不是线性的，因此简单把各项资产收益率的方差进行加权平均是没有任何意义的。 那么应该怎么求组合的标准差呢？这里需要引入一个新的概念。 资产之间的相关性衡量一个资产的收益率的波动程度用方差，那么如何衡量两个资产的波动程度呢？把上面的方差公式改改： 其中： X,Y代表两项资产 上面的指标被称为X和Y的协方差(Covariance)。然后再定义一个指标，叫做X和Y的相关系数： 不难发现，如果X和Y完全同步，那么相关系数就是1，如果X和Y的变化正好相反，那么相关系数就是-1 Excel提供了CORREL函数求两个矩阵的相关系数，这个在分析相关性上非常实用 两种资产组合的标准差假设某个投资组合中有两种资产，那么这个投资组合的方差可以这样计算： 于是可以得出： 于是可以得出一个结论：如果两种资产的协方差越小，越靠近-1，整个资产组合的方差越小，也就是风险可以得到分散。 多种资产组合的标准差与两种资产组成的组合计算标准差相似，多个资产构成的组合的方差可以这样表示： 例如，3个资产组成的组合的方差为： 这个公式，实际上是一种矩阵的表达： W矩阵在我们确定资产权重的时候很容易可以得到，接下来我们只要得到V矩阵，也就是方差/协方差矩阵，就可以计算出来组合的标准差了。 这个方差/协方差矩阵长的应该是这个样子： 方差/协方差矩阵应该怎么算呢? 首先，方差/协方差矩阵是资产组合中各种资产的相关性，与其在组合中的权重没有关系。 其次，如果已经有了每项资产的N个收益率数据，那么每个收益率的概率均等，为1/N。 再根据协方差的公式，就可以得到方差/协方差矩阵形式为： 什么是差异矩阵呢？实际上就是每项资产的实际收益，减去其平均收益得到的矩阵。 由此，我们就可以计算多种资产的风险度量，也就是标准差了。 使用Excel计算资产组合标准差利用Excel的数组函数，可以相当方便的求出组合的标准差。 例如，有一组数据，包含了4个资产5年的收益率，分别计算了单支资产的期望和标准差： 然后确定权重，假定为各25%。 然后计算协方差矩阵，使用矩阵乘法即可。 最后利用协方差矩阵和权重，计算资产组合标准差即可。 在计算过程中，要注意数组公式，也就是Ctrl+Shift+Enter的使用。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>投资组合</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资本预算决策方法]]></title>
    <url>%2F2018%2F08%2F03%2Fcapital-budgeting-decision-method%2F</url>
    <content type="text"><![CDATA[​ 前文回顾资本预算考虑： 增量现金流 税后现金流 资本预算不考虑： 沉没成本 融资成本 现金流分3种： 初始投资IO 年度税后现金流ATCF 剩余现金流TCF 在我们确定了3种现金流的金额之后，就可以来决策了。 决策方法首先考虑这样一个现金流，作为例子： 期初投入62680元 从第一年开始，每年获得24248元的增量现金流 第5年有18000元的剩余现金流 投资回收期法(Payback Period)这个方法的思路很简单，我投入了62680元，每年回收24248元，我需要多少年才能收回成本？初中数学了解一下，直接用62680/24248=2.58。 也就是说，我需要用2.58年收回成本，如果公司期望3年收回成本，那么2.58年也是可以接受的。 看似很有道理哦，也很好实现，但投资回收期法有几个问题： 忽略了现金流的时间价值 忽略了未来可能的现金流流出。万一这个项目第4年又流出了40000美金，按照回收期法，结果依旧是2.58年，项目依旧可以接受。 折现回收期法(Discounted Payback Period)相对于普通的回收期法，折现回收期考虑了现金流的时间价值。于是我们把从第一年到第5年的现金流依次折现，然后与初始投资相加，一直到现值大于零为止，得到一个年数，就是折现后的回收期。 使用折现回收期法，计算出的回收期为&gt;3年。因此，如果公司要求3年回收IO的话，从数字上来看这个项目是不能接受的。 虽然折现回收期考虑了货币的时间价值，但是，并不是所有项目周期内产生的现金流都被列入计算。如果想改进这一点，就得使用下面的净现值法。 净现值法(NPV)前面的折旧回收期，虽然考虑了现值，但他只考虑了能够补偿初始现金流的现值部分，后面的并未考虑。如果考虑全部现金流，他的现值(折算到第0年)为： 然后把这个现值减去初始投资，就得到了整个项目的净现值： 也就是说，得到了整个项目的终值，折合到今天的价值。如果这个NPV为正数，就可以接受，如果为负数，就不能接受。 Excel提供了NPV公式，来计算一组现金流的净现值： 在使用NPV函数的时候，如果直接把IO也作为现金流包含在NPV函数里，例如NPV(B9,B2:B7)，那么得到的是第-1年的NPV，并不是真正第0年的NPV。这个时候，需要用(1+hurdle rate)来校正。 从理论上来讲，NPV法是资本预算中最科学的一种方法。 盈利能力指数(Profitablity Index)NPV给出了净现值的绝对值，不过，这可能忽略项目规模。如果一个初始投资为1000的NPV为10，和一个初始投资为100，NPV为8的项目比较，从NPV的绝对值上来看，似乎第一个项目更好，但实际上，第二个项目的收益率要更高。从这点来讲，这个与销售额和利润的关系类似。 于是，我们引入了盈利指数这个概念。 简单的讲，盈利指数就等于项目回收的现金流，除以初始投资： 或者， PI=NPV/IO+1 很显然，如果NPV大于零，PI就大于1，项目就可以被接受。 内部收益率(IRR/MIRR)还是从NPV的角度上考虑，如果NPV为0，代表项目处在可以与不可以接受的临界点，这个时候，可以计算出一个折现率，这个折现率就被称为内部收益率。 如果计算出来的内部收益率大于要求收益率，就代表项目可以被接受。 内部收益率可以通过下面公式来计算： 鉴于这是一个多次方程，没有什么快速方法来求解，只能逐个试错。Excel提供了IRR函数，来计算内部收益率。IRR虽然非常常用，但也是存在一定问题的： 方程不一定有唯一解。如果一个项目有多个现金流流出，那么就会有多个IRR 内部收益率法默认现金流以IRR继续投资，但IRR并不一定能反应真实的再投资收益。Excel有一个内置函数MIRR，可以对IRR进行再投资收益率的校正。 总结确定了现金流和决策方法之后，就可以对资本预算进行下一步，也就是敏感度分析和优化了。敏感度分析涉及不同hurdle rate下的净现值，优化涉及到规划求解，在这里就不详细探讨了。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>资本预算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资本预算]]></title>
    <url>%2F2018%2F07%2F31%2Fcapital-budgeting%2F</url>
    <content type="text"><![CDATA[​ 什么是资本预算在企业报表的部分我们说过，企业主要是在做经营，投资和筹资三件事情。筹资，和我们资本成本有很大关系。既然筹到了资，那么一定需要把资产投出去，让他变成更多的资本。 在企业投资的时候，当然要事先考量投资的收益以及自己的成本。只有在收益大于投资的时候，企业才有动力去投资。 资本预算就是主要服务与此。简单点讲，资本预算就是企业确定投资预期收益，并决策是否到底要投资的一种方法。 如何进行资本预算在资本预算的过程中，公司最关注的还是投资的项目是否能够产生现金流入。从股东的层面上来讲，只有账面有现金，才能有钱分红。一般来说，单个项目的资本预算可以这样来做： 确定现金流 根据现金流进行决策 确定现金流资本预算里对其所关心的现金流有这么几个要求： 增量现金流如果新项目和老项目的产品存在相互替代，那么资本预算只考虑多出来的那部分现金流。 税后现金流毕竟，所需要交的税是不属于公司的，公司只考虑税后现金流。 对于现金流，还有几点： 不考虑沉没成本对于一笔钱来说，不管新项目上还是不上，都必须要花的话，那么他就是沉没成本。资本预算是不予以考虑的。 不考虑融资成本这个也不难理解，资本预算是先考虑收益，然后再对比成本。融资成本实在资本成本那里计算的，并不在资本预算的现金流范围之内。 现金流分类对于一个项目来说，现金流按照项目的推进一般分三类： 初始投资(IO)Initial Outlay，表示公司在项目初期需要投入的现金流。这个现金流主要包括以下几个部分： 项目的价格（例如设备费用） 运输费，安装费，培训费 以上两个项目需要都计入折旧基础，也就是说，折旧其实不仅仅只包括固定资产自身的价格，也包括与固定资产相关联的附加费用。 原有设备的残值 上了新的项目，旧的机器还是有残值的。因此，残值相当于是现金流的流入。不过，如果机器的残值和账面价值不同，那么就会附带有税收影响。 例如，一台机器原价100万，预期使用10年。用线性折旧5年之后，以60万的价格卖出，税率是25%。对于这种情况，使用5年后，机器的账面价格为50万，而以60万售出，税前现金流增加了10万，而这10万需要付25%的税，因此，税后的现金流增加值为10*（1-0.25）= 7.5万 营运资本的变动 如果新项目投入后，需要增加净营运资本，那么营运资本的增加值也应当被计入初始投资里。 综上所述，初始投资IO的计算公式为： 123456初始投资 = 项目价格+相关费用(运输，安装，培训)-残值+处理残值带来的税费+净营运资本的增加 年度税后现金流(ATCF)ATCF考察的是项目在运转后，每年的现金流回报。ATCF一般包括几个现金流组成部分： 收入增加 这个并不难理解，注意这个收入增加是净增加额 成本节约 如果上一个项目，能让以后少花钱，也是可以考虑的。 附加费用 如果投入了新的项目导致人工维修等费用增加的话，这部分费用需要在现金流中扣除。 不难看出，上面这3个部分都属于税前现金流的增加。需要扣除税率，来得到税后现金流。 净营运资本变化 和初始投资IO一样，每年净运营资本可能因为很多原因发生变化，最典型的就是通货膨胀了。所以，也需要把经运营资本的变化也考虑在内。 净运营资本的增加使用的是税后的现金流，因此不需要用税率进行调整。 折旧收益 折旧收益是很容易被忽视的一项影响现金流的项目。因为折旧是非现金费用，是税前扣除的，因此也具有税盾的作用。 那么这个税盾的值是多少呢？ 就直接用新项目每年的折旧相对于旧项目每年折旧费用的增加量，乘上税率就可以。 综合上面5点，我们可以计算出税后的年度税后现金流为： ![mark](http://www.doublure.cn/blog/180802/iAEggKGLCA.png?imageslim) 然后再把`-Dn(1-t)+Dn`合并一下，就变成了： 综合上面5点，我们可以计算出税后的年度税后现金流为： 1234567年度税后现金流= (附加收入+成本节约-附加费用)*(1-税率)-净营运资本的增加+折旧费用增加*税率 剩余现金流(TCF)在项目末期所产生的现金流。一般包括停产，回收净营运资本，处理残值等等。 12345剩余现金流= 净营运资本变化的回收+残值-(残值-账面价值)*税率-停产成本*(1-税率) 确定了每个阶段的现金流之后，我们就可以进行下一步决策了。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>资本预算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资本成本脑图]]></title>
    <url>%2F2018%2F07%2F29%2Fcost-of-capital-mindmap%2F</url>
    <content type="text"><![CDATA[​]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>资本成本</tag>
        <tag>脑图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算加权平均资本成本]]></title>
    <url>%2F2018%2F07%2F29%2Fwacc%2F</url>
    <content type="text"><![CDATA[​ 前文回顾前面我们花相当的篇幅研究了个别资本成本，也就是长期借款，债券，普通股和优先股的资本成本。 有了个别资本成本之后，我们当然不能简单的把资本成本加起来求算术平均，不然就会得到类似于郭敬明和姚明的平均身高为一米八的滑稽结果。 试想这样一种情况，你今年正在进行理财，余额宝投入10万，年化收益3%，银行理财投20万，年化收益为5%， P2P投入10万，年化收益为10%。问：一年下来总的年化收益为多少？ 我相信大家都不会简单的把3个年化收益相加求平均，得到6%的答案。因为，每个理财的投放额的权重是不一样的，对最终年化收益的贡献也不同。 对于资本成本也是一样，若要求真正的资本成本，我们得先知道，每一项资本的权重是多少。 权重的确定确定每一项资本的权重，一般有3种方法 账面价值权重反映的是每一项资本在入账时，记录的资本价值。例如，如果发行了1万股的普通股，每股发行价为10元，那么普通股账面价值就是10万元。 那么问题来了，像普通股这种东西是可以交易的，会有一个市场公允价格，如果后面股价从10元涨到了20元，那么很明显，普通股的资本成本在实际的资本中所占的比例要高了。 因此，账面价值权重只是反映了一个历史权重。 市场价值权重如上面所说，市场价值权重可以反映市场运行当中公司真正的资本成本。 市场价值权重需要先把各项资本按照市场价值来进行计算，然后得到相应的权重比例。 目标资本结构权重公司在经营的时候，很有可能已经事先根据市场测算出了一个最优的权重，使得资本成本得到最优解。随着市场的进行，管理层很有可能会朝着这个方向努力，达到最优的资本权重。 因此，也可以根据目标资本权重来确定各项资本的权重。 WACC有了个别资本成本，以及对应的权重之后，我们就可以计算加权平均资本成本了。计算公式很简单： 总结至此，不考虑发行成本的资本成本的计算就可以计算出来了。 后期还可以再深入的内容有： 考虑发行成本 考虑边际资本成本（阶梯函数）]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>资本成本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[债务成本的计算]]></title>
    <url>%2F2018%2F07%2F29%2Fcost-of-debt%2F</url>
    <content type="text"><![CDATA[​ 前面一节引入了企业资本成本的问题，我们提到，企业的筹资成本包括债务和权益成本。 上节回顾上一节主要研究了权益成本，包括普通股和优先股权益成本。普通股成本可以用两种方式来计算： DDM折现法 CAPM法，利用β来计算优先股的成本可以直接用永续年金的方法来计算。 其实上一节还落了一点：权益成本还有一种：留存收益成本。也就是说，企业在赚了钱之后，只把利润的一部分进行了分红，剩下的留在企业，继续用来发展企业。 既然没有把好处都分给股东，那么股东自然对留下的这部分钱是有收益的期望的。这个期望就等于普通股的收益。也就是说，留存收益的资本成本就等于没有发行成本的普通股成本。 1Kre = D1/pv +g 这里： Kre就是留存收益的成本 D1是预计明年的股利 Pv是股票当前的价格 g是预计股利每年的增长率 债务成本前面说过，这里的债务都指的是长期债务。也分两种： 长期借款 长期债券 现在以长期债券为例，计算债券的债务成本。 根据现值和终值的理论，长期债券的现值等于未来每年所收到的利息，以及债券到期后本金的折现到现在的现值。 根据前面的公式： 这两项中，第一项就是所有利息的折现的现值，第二项是本金折现成的现值。 公式里的参数分别是： pmt：每年的利息 FV：债券到期回收的本金 kd: 债券的成本 VB: 债券的现值 上面这个公式直接用一般的数学方法是算不出来的，一般采用试错的方法来得到。 当然，在Excel里，可以使用RATE函数。怎么来理解呢？一步一步来。 期初花了PV的钱购买了一个债券 每一期回收PMT的利息，直到最后一期 最后一期所得到的终值价值为FV 有了这些内容，就可以使用RATE函数求解了。 长期借款的计算方式和长期债券相仿，就不再详细介绍了。 税盾用上面的方法，我们就可以算出来一个债务成本。这个成本的计算并没有考虑税。企业在支付息税的时候，先付息，再付税，那么税收对企业债务成本有什么影响呢？ 举个例子来看。 如果有两家企业，息税前利润（EBIT）都是300，不同的是，公司A有100块借款利息要付，而公司B没有任何借款。我们假设企业所得税税率为25%。 那么，公司A扣除利息和税后的收入为：200-200*0.25=150公司B扣除息税后的净利润为：300-300*0.25=225 可以看得出来，税前净利润A比B少了100，而税后只少了75，利息的存在具有抵税的作用。 所以，企业所需要还的利息当中，有一部分是用来抵税的，因为如果你不借款，就要交更多的税。剩下的部分，是企业真正要负担的，也就是kd(1-t)。其中， kd是税前债务成本 t是税率 总结得到了每一个个别资本成本（普通股，优先股，长期借款，长期债券）的值后，我们接下来就需要确认各个资本的权重，然后就可以计算出加权平均资本成本（WACC）了。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>资本成本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[资本成本和权益成本]]></title>
    <url>%2F2018%2F07%2F27%2Fcost-of-capital-and-equity%2F</url>
    <content type="text"><![CDATA[​ 资本成本的意义一个企业需要正常运营，就需要资本。那么企业的资本一般从哪里来的呢？ 一般来说，企业的资本，要么是从外面借的，要么就是股东投的。我们通过资产负债表来看的话，大概有这么几个资本来源： 长期负债 优先股东投资 普通股东投资 资本和资金：资金包括短期和长期资金，长期资金一般被称为资本。 都说天下没有免费的午餐。资本如果是从外面借的，那么债权人是需要向企业收取利息的。资本如果是股东投的，那么股东对自己的投资也是有期望的，因为股东是有机会成本的。 一般来说，股东的机会成本就是企业所在行业的平均投资收益率。 这两种成本作用到一起，就可以得到公司使用这些资本的代价，也就是公司的资本成本。很显然，如果公司的收益比资本成本还低的话，公司就是在做赔本买卖了。 公司投资所应获得的最低回报率叫做 hurdle rate 资本成本的意义就在这里。知道了资本成本以后，结合投资的预期收益就可以决定是否要进行投资了。 权益成本权益成本(Cost of Equity)，包括普通股和优先股成本。 什么是优先股和普通股这两个的区别主要体现在股利的发放数目和发放日期上。 优先股（Preferred Stock）有优先接受股利的权利，优先股的股利会定期发放，并且数额固定。从这个层面来看的话，优先股其实就是一项永续年金。 普通股（Common Stock）股利的发放日期不定，数量也不确定，也就是说，能不能收到股利，全看上市公司董事会的心情。中国多数的上市公司都是不发放股利的。 优先股成本的计算我们知道，投资一个股票，获利有两种方式，一种是收股利，一种是价差买卖。而优先股在交易方面，只能通过公司赎回，或者转成普通股（能不能转需要根据公司发行优先股的时候来确定）。所以，优先股就可以被看做是一个永续年金。 永续年金折成现值的计算公式我们前面学过： 在优先股股利固定，也就是g=0，年金永续，也就是n趋向于无穷大，pmt也就是D，因此可以得到： 1pv = D/kp 其中D是每年能领到的股利，pv就是优先股的发行价格，这样我们就能计算出kp，也就是优先股的成本。 1kp = D/pv 也就是说，发行价越高，优先股的成本越低。 在中国，发行的优先股并不多。 普通股的成本计算前面说过，普通股的资产回报有两种方式：股利和交易。于是，也对应了两种计算普通股成本的方式。 股利折现法（DDM） 这里需要有几个假设： 每年都有股利 股利每年都以g的增长率增长 于是和上面的优先股的年金计算方式类似，可以得到普通股的现值公式：1pv = D1/(ks-g)=D0*(1+g)/(ks-g) 再稍作运算，就可以得到： 1ks=D1/pv +g 资本定价法 这个也就是传说中的CAPM法，这个方法算是奠定了现代财务分析的基础。 简单点来讲，CAPM法就是通过股票与大盘走势的对比，通过一个风险因子（β），大概估出一个股价的增长率。 怎么求β就够讲半天了，因此在这里先讲结论： 也就是说，知道了β，大盘的期望收益(Rm)，无风险收益率(Rf)，就可以求出股票的期望收益了。如果投资公司的收益达不到计算出的期望收益，股民是没有必要投资这个公司的。 除了权益成本以外，还有一个很重要的部分，就是债务成本，这个我们后面再详细研究。 参考文献https://wenku.baidu.com/view/6d8b2915e45c3b3566ec8b41.html?from=search]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>财务分析</tag>
        <tag>资本成本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对报表进行比率分析]]></title>
    <url>%2F2018%2F07%2F24%2Fratio-analysis%2F</url>
    <content type="text"><![CDATA[​ 什么是比率分析？前面的三张报表，把一个企业从资本，盈利能力，以及风险的角度进行剖析，展示了一个企业的现状。 拿当然，仅仅看到报表里的绝对值数字是不够的，我们还要分析这些数字意味着什么，这个时候就要进行比率分析。 所谓比率分析，其实就是分析各个财务数字之间的比率（ratio）关系。通过对比一家公司同一个比率指标在不同时期的表现，或者对比一家公司的某个比率指标与整个行业平均值，就可以判断出这家公司的财务和经营状况。 另外，需要注意的是，单单比较某一个比率是没有意义的，需要将多个比率结合起来对比才能做出正确的判断。 比率有哪些分类？ 流动性比率 盈利能力比率 营运效率比率 杠杆比率 偿债保障比率 流动性比率流动性流动性，基本可以理解为资产变为现金的速度。一个企业资产变为现金的速度越快，其流动性就越快。那一个企业哪些资产容易变成现金啊？前面我们说过，流动资产是最容易变成现金的。并且，在流动资产里各项的排序，也是按照其变成现金的先后顺序来的–货币资金本身就是现金，存货要生产出来卖掉，才有可能变成现金。 流动比一般来说，流动资产转化成现金后，多数情况下是用来偿还流动负债。因此，我们可以用流动资产除以流动负债来得到流动比。 流动比率=流动资产/流动负债 流动比： Current Ratio 显然,流动比越高，偿债能力越强。像苹果这种公司有450亿美金现金在账面上的公司，是几乎不用担心他换不上账的（当然，苹果公司也有很多流动负债） 速动比上面说过，流动资产里最不容易变成现金的是存货。存货先要经过生产，销售环节，才有可能变成应收或者货币资金。更何况，存货很有可能因为市场环境或者公司策略的原因，要很长时间才能被销售掉。所以，把存货从流动资产中拿走，用剩下的流动资产除以流动负债，就得到的速动比。 速动比=（流动资产-存货）/流动负债同样，速动比越高，代表公司资产的流动性越强。 盈利能力比率盈利能力是对利润表进行的分析。 毛利毛利=(营业收入-营业成本)/营业收入 净利率净利率= 净利润/营业收入当然，净利率越高越好。但是呢，我们前面说过，净利润高不一定是真金白银，有可能是公允价值高，所以不一定能完全说明问题。因此，考察营业利率也很必要。 营业利率营业利率=营业利润/营业收入 这个指标越高，就说明营业活动收益越高 总资产报酬率又被称为ROA，代表的是单位资产所能取得的利润回报ROA=净利润/总资产 净资产报酬率又被称为ROE，代表的是单位净资产（总资产-负债），也就是单位股东权益所能获得的利润回报。ROE=净利润/股东权益 营运效率比率基本上可以这么理解，营运效率指的就是公司的各种资源的效率，也就是周转速度。周转的越快，代表营运效率是越高的。 应收账款周转率基本上来说，这就是企业在实际运营过程中最关心的周转率之一。应收账款代表的是企业的赊销，这个数字越低，企业坏账的风险也会越低。应收账款周转率的公式如下： 应收账款周转率=营业收入/应收账款 我们看到，这个比率实际上是把利润表和资产负债表的相应数字的结合。然而，利润表反映的是一段时期之内的表现，而资产负债表反映的是某个时间节点的表现。因此，为了统一，应收账款需要使用期初和期末的应收账款的平均值。 应收账款周转率代表一年之内应收账款的周转次数。于是，用一年的天数，除以应收账款周转率，便可以得到平均账期。 存货周转率代表一年之内存货的周转次数。 存货周转率=营业成本/存货 同样的，在这个公式里的存货需要使用期初和期末的平均数。 固定资产周转率代表单位固定资产所能产生的营业收入。 固定资产周转率=营业收入/固定资产 总资产周转率代表单位资产所能产生的营业收入。这个数值当然是越高越好。 总资产周转率=营业收入/总资产 不要忘记使用期初和期末的平均值 重新审视ROA有了上面这些比率，我们就可以重新审视ROA了。 也就是说，总资产报酬率等于利润率与总资产周转率的乘积。 这也就可以解释提高资产报酬率的两种方式：提高利润率(比如生产高端产品)，或者加快资产周转(薄利多销)。 杠杆比率一个公司在发展的过程中，必不可少需要使用杠杆。看看15年股灾的时候证监会去杠杆引起了多大的震动，就知道杠杆比率有多重要。 总负债比资产负债表的右边，是负债和股东权益，分别代表了债主和股东的利益。因为企业在还完债之后才可以对股东进行分红，因此很有必要考察企业的负债比。 总负债比=负债/总资产 权益乘数从另外一个方面显示杠杆比以及负债比。 权益乘数=总资产/股东权益 权益乘数越高，就代表资产中股东权益的比例越小，也就是负债的比例越高，财务风险越大。 偿债保障比率这个比率和流动性比率相仿，表示的都是偿债能力。 利息保障倍数使用息税前利润(EBIT)与利息的比值来表示公司偿还利息的能力。 利息保障倍数=EBIT/利息]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>报表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[财务报表之现金流]]></title>
    <url>%2F2018%2F07%2F13%2Fcash-flow%2F</url>
    <content type="text"><![CDATA[​ 为什么需要现金流量表？在研究利润表的时候我们说过，利润高并不等于现金多。举个最简单的例子，营业收入高，说明产品卖出去的多，但是，产品卖出去的多不代表能立刻收回账来。收回账来也不一定收回的是现金，还有可能是6个月的承兑。 然而，一个企业在运营的时候需要花现金的地方简直太多了。企业每个月都会要付出利息，总不能用银行承兑来抵利息吧？就算企业可以赊账购买原料，但不可能所有供应商都愿意让企业赊账吧？ 再举个更简单的例子：多数销售人员在大学刚毕业的时候，没攒下什么钱，可偏偏要经常出差，所有费用都要自己先垫付，然后找公司报销。要报销的钱，从财务上来看，都是应收账款。要报销的数额越大，就相当于公司占用了越多的个人现金。如果个人积蓄不够雄厚，过几个月可能就没有钱付房租了。 类比过来，企业的经营也是如此。资产负债表能看到企业的家底，利润表能看到企业到底赚不赚钱，现金流量表则是从运营风险的角度来看企业的运转是否正常。 现金流量表是怎么组织的？一个基本的概念是，一个企业始终在进行经营，投资和融资活动。那么，把每一种活动的每一笔现金流入和流出都记录下来，最后再根据企业活动类型（经营，投资，融资）以及流向（流入，流出）来进行分类，就可以得到一张现金流量表。 没错，现金流量表就是把现金（注意一定是现金）的流水账，分分类，然后用类似数据透视表（Pivot Table）的技术进行汇总。 经营，投资和融资各包括什么活动？大致上，这三项活动涉及的现金流入流出可以这样来划分： 经营活动 流入 销售 税收（退税） 流出 采购 税收（交税） 人工 投资活动 对内投资 流入 处置资产 流出 购建固定资产（注意购买固定资产是投资，不是经营活动） 对外投资 流入 处置收益 流出 投资 融资活动 债务融资 流入 借款，融入资本 流出 还本付息 股权融资 流入 融入资金 流出 分红 现金流量表与资产负债表的关系是什么？现金流量表展示的也是某个时间段内，资产负债表中货币资金的变化。也就是说，现金流量表完全是在详细的解释货币资金发生了什么变化，这些变化是由什么造成的。 再把利润表也拉进来，我们就可以得到这三张报表之间最直截了当的关系：资产负债表是主体，利润表和现金流量表从盈利能力以及企业风险的角度来更深层次揭示企业的财务运转情况。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>报表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[财务报表之利润表]]></title>
    <url>%2F2018%2F07%2F13%2Fincome-statement%2F</url>
    <content type="text"><![CDATA[​ 前面我们说过，资产负债表是反映一个企业家底的表格。既然如此，为了更深入地了解企业，很自然有一个问题就冒了出来： 企业的钱都是从哪里赚来的？ 资产负债表的股东权益里有一项叫做未分配利润，上面这个问题其实就是问：未分配利润是怎么来的？ 所以，我们需要深入研究一个企业的收入，以及盈利能力。利润表就是用来干这个的。 利润表是怎么做出来的说白了，利润表就是收入减去各种费用得来的，这和我们平时算账差不多。 利润表里的各项元素有下面这些： 营业收入这个术语一看就知道是属于经营活动产生的收入。这里要注意一点：营业收入是不包含增值税的。具体点讲，增值税是价外税，并且是流转税，实际上最终都是由消费者承担的，所以增值税不影响最终损益。也就是说，增值税在利润表中是不体现的。 营业成本生产或者营业所产生的成本。产生成本的项目很多，也可以分成两种： 可变成本简单点理解，可变成本就是跟随产品产量变化的成本。例如，生产一台电脑需要很多芯片，电脑生产的越多，就需要越多芯片。如果不生产电脑，就不需要付芯片的钱。在上面这个例子里，芯片就属于电脑生产的可变成本。 固定成本简单点理解，公司生产或不生产，固定成本就在那里，不多不少。举个例子，为了生产电脑需要购买流水线，价格1000万，折旧5年。那么不管公司生不生产电脑，固定资产折旧的成本每年都是200万（按照线性折旧来计算）。假设一条流水线每年能生产1万台电脑，每一天电脑的芯片成本1000元（不考虑其他可变成本），那么公司出来的电脑需要卖至少要卖200/1+1000=1200块才能保本。但是在某些极端情况下，如果市场下游需求不好，很有可能1100块也可以卖，每台电脑还可以赚100块来抵消一部分固定成本。 营业税金及附加在中国有一个特色税种，叫做营业税。营业税是一种价内流转税，以前一般都使用在服务业。营业税的特点是：企业在经营，不管有没有赚钱，都得交营业税。不过16年5月国家全面实施了营改增，营业税算是退出历史舞台了，这个科目也变成了税金及附加。附加又指的是什么呢？调整过后的附加包括：消费税、城市维护建设税、资源税、教育费附加及房产税、土地使用税、车船使用税、印花税等 营业费用在生产和销售过程中所产生的费用。一般包括： 清关报关费用 物流费用 货物保险 由销售活动所带来的费用，如销售人员的差旅费用，工资等 广告费 管理费用与企业的管理环节相关的费用。包括： 管理部门职工工资 管理人员的差旅费用 研发费用 咨询费 公司办公楼的折旧 财务费用企业经营过程中筹资或者银行存款所发生的费用，包括： 利息支出 利息收入 手续费 汇兑损益 上面的这些项目，是企业基本经营和筹资方面所产生的收益部分，当然，其他因素也能影响企业的利润，这些又包括： 投资收益投资收益是企业营业利润当中的一部分，指的是企业投资所产生的收益，包括股利，分红等等。 资产减值损失如果资产相对于历史成本发生减值，就需要把减值也记录在利润表里。当然，如果资产升值的话，利润表是不做记录的。 公允价值变动收益对于金融资产来说，是有公允价值(Fair Value)的，如果企业所拥有的金融或者房地产资产比上一期末有变化，也需要把变化的值记录下来。 有了上面这些信息，我们就可以得到企业的营业利润了。 营业利润通过简单的数学计算就可以得到： 1营业利润=营业收入-营业成本-税金及附加-营业费用-管理费用-财务费用+投资收益-资产减值损失+公允价值变动收益 除了正常的营业利润，企业在一个周期内可能会有一些其他收入或者支出，而这些收入或支出不一定是由于营业带来的。 营业外收入企业在营业范围以外所获得的收入，例如： 获得政府补贴 出售无形资产（专利，商标等） 处置固定资产收入 罚款收入 营业外支出与上面营业外收入对应，指企业在经营范围以外的支出，例如： 处置固定资产损失 公益捐款 非常损失（例如火灾等等） 固定资产盘亏 有了营业外的收入和支出，我们就可以再进一步，获得企业利润总额了。 利润总额1利润总额=营业利润+营业外收入-营业外支出 所得税费用这个不需要解释，赚了钱，还能不交税？中国企业所得税的税率是25%，老老实实交税吧！这里要注意一点：所得税的税率是25%，并不代表拿到手里的钱一定是利润总额的75% 应税所得是税法规定的，可能会高于利润总额 净利润交完税了，剩下的就是净利润了。1净利润=利润总额-所得税费用 利润不等于现金流正常来看，在企业的资产负债表上的股东权益部分，是可以体现利润情况的。如果只看一个总数，利润很高，会很亮眼。但是，这些利润是从哪来的？这些高利润是否能够持久维持？这两个问题仅仅看一个数字是看不出来的。所以，我们需要有一张利润表，把企业各个方面的盈利能力一一量化，这样我们就会对企业来钱的能力有更深刻的认识。 但是，利润高和有钱不是一回事！ 我们看到前面，利润高的原因可能有很多： 营业收入高 一般费用低 公允价值变动收益多 投资收益多 这里面： 公允价值变动收益可能根本不会立刻带来现金 营业收入高，不代表所有账款都已经收回来 所以，光有资产负债和利润表并不能体现出企业的货币资金的情况，这个时候就需要一张现金流量表了。 利润表是一个阶段企业利润的显示我们前面说过，资产负债表显示的是某一个特定的时间点，企业所拥有的资产情况。而利润表不同，利润表表示的是一个时间段内（通常是指1个季度，半年，3个季度，全年），公司的盈利情况。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>报表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[财务报表之资产负债表]]></title>
    <url>%2F2018%2F07%2F04%2Fbalance-sheet%2F</url>
    <content type="text"><![CDATA[​ 企业的主要行为是什么？ 经营 投资 融资 资产负债表是什么？反映一个企业所拥有的资产的，也就是企业家底的一个表格。资产就是是可以货币表示的东西资产仅仅是企业资源的一部分 资产负债表由哪些构成？资产从流动性上来看，两大类，6小类 流动资产一般指一年（或者一个经营周期）内可以转化成现金的资产流动资产包括三项主要的资产 货币资金 债券 应收账款 预付账款 存货 非流动资产一般指一年（一个周期）以上才可以转化成现金的资产 长期投资 比较重要的是长期股权投资，经常用来做文章 固定资产 固定资产 在建工程 固定资产清理 投资性房地产 无形资产以及其他非流动资产 无形资产 开发支出 商业信誉等 从对利润的贡献方式来看的话，也分两类： 经营资产 货币 债券 存货 固定资产 无形资产投资资产 可供出售金融资产 持有至到期的投资 长期股权投资 资产负债表的右边，就是写明了资产的归属，资产的归属有两种人： 债权人 股东 负债流动负债: 企业在一年（一个周期）之内必须要支付的负债 短期借款 应付账款 预收账款 非流动负债：一年以后才需要偿还的负债 长期借款 长期应付款 其他非流动资产 股东权益 实收资本/股本股本是针对上市公司而言的，普通的公司叫实收资本。在中国就是注册资本，股本的总额体现出了公司对外承担的法律责任的上限 资本公积股东入资导致超过股本，多出来的部分就放到资本公积里 盈余公积中国规定企业10%的利润一定要存到盈余公积里 未分配利润公司利润先留10%到盈余公积，然后剩下的部分再分红，最后还剩下的部分就叫未分配利润 一个守恒定律资产= 负债+股东权益，放之四海而皆准 资产形态的变化，不影响负债和股东权益的变化。也就是说，用现金投资了固定资产，变化的只是资产部分的内部，而负债和股东权益是不会变的。如果资产小于负债，导致股东权益为负，就是资不抵债 资产负债表意味着什么？资产负债表显示的只是某个特定时刻，例如年末或者季度末，公司整体的家底。但在这一年里发生了什么？资产负债表上是看不出来的。结果导向，是资产负债表最大的特点。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>报表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[连续复利的计算]]></title>
    <url>%2F2018%2F06%2F25%2Fcontinuous-compounding%2F</url>
    <content type="text"><![CDATA[​ 我们前面说过，时间是投资的朋友，其实也就是说，复利可以生成更多的终值。如果现在银行定期的年存款利率为5%，并且你计划存12000块到银行存款。现在有两家银行可选，一家银行半年结一次息，另外一家银行3个月结一次息。如果想到年底获得最大的终值，应该怎么选呢？ 前面我们说过，终值的计算公式是这样子的： 其中i是年华利率 n是以年计算的期数 如果把一年分成m期，那么每期的收益率就变成了i/m,总共的期数就变成了nm。上面的公式就变成了： 假设银行允许你极限操作，每年可以分成的期数m允许为无穷大，我们队上面公式求个极限： 也就是说，在每年可以分成无穷多期的情况下，每年的收益可以逼近e^i-1 最后，我们用Excel来模拟一下一年分成多期的情况。下面这个图列出了每年分的期数，以及对应的终值。可以看得出来，期数越多，终值是越高的。不过貌似分52期和分一期最后只差了0.1%，资金量小的时候，差别不大，但当资金量大的时候，这0.1%还是很可观的。 总结 e^i-1这个极限值要记住]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[递增年金的终值和现值]]></title>
    <url>%2F2018%2F06%2F25%2Fgrowing-annuities%2F</url>
    <content type="text"><![CDATA[​ 上一篇文章中，我们探讨了货币的时间价值，以及年金在每期数额相等的情况下，所对应的现值和终值。实际情况中，我们也会经常遇到年金不断增长的情况。比如说下面这个例子：现在有一笔钱要存入银行，存款利率为5%。你准备在未来6年每年提出10000块钱用作孩子的学费。然而，学费以每年3%的速度增长。那么，你现在需要存入多少钱才可以？ 传统数学方法计算现值我们假设年金每年的增长率为g(上面例子为3%)投资利率为i(上面例子为5%)起始年金为pmt(上面例子为10000)期数为n(上面例子为6) 在这种情况下，年金的示意图为： 每年年金对应的PV计算如下： 把每年的PV相加，利用等比数列的求和公式，就可以得到总的PV 用Excel来计算如下： 另外一种思路这个公式看起来也很复杂，有没有别的思路来看待这个问题呢？ 如果我们先不考虑年金，只计算单笔资金的情况： n年后，单笔资金的FV为 PV(1+i)^nn年后，资金购买力下降（可以理解成通货膨胀），单笔资金因为通货膨胀所造成的贬值因子为：(1+g&gt;^nn年后，资金的实际购买力为：PV(1+i)^n/(1+g)^n这个公式看起来很眼熟，把他和正常的FV=PV(1+i)^n相比，就相当于是实际的利率为： 题外话：如果你的资产增长率低于通货膨胀率的话，那你的资产增长的实际利率就变成负值，被割韭菜是不可避免了。 使用PV函数计算有了实际利率，我们就可以使用Excel自带的PV函数来计算现值了。在计算的时候，还有一点要注意：我们在案例中的PMT是从第一期开始计算的，需要把它修正为第0期。 怎么修正呢？直接用第一期的PMT除1+g即可。 我们把上面的参数带入到Excel中，就可以直接用PV计算出结果。 计算终值我们有了上面的现值公式，又知道了现值和终值的关系，所以，直接把现值乘上(1+i)^n即可。于是，终值的公式就成为： 这里要注意的是，不能使用上述计算PV的参数来计算FV。最好的方法，还是把上面的PV计算出来之后，再乘(1+i)^n 总结 递增年金的概念，以及计算其现值和终值的方法]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[货币的时间价值]]></title>
    <url>%2F2018%2F06%2F24%2Ftime-value-of-money%2F</url>
    <content type="text"><![CDATA[​ 我们在不少地方应该都听说过，时间是投资的朋友。金融学里一个很重要的思想，就是钱生钱。简单的说，今天的100块，和一年后的100块，从价值上来说是不一样的。因为，今天我可以用100块去投资，哪怕是投风险最低，收益最低的国债，明年怎么也能拿到103块左右。 从这个例子来说，现在这个时间点，这100块钱就值100块，这个称作现值。一年后，变成了103块，这103块就是一年以后的终值。 现值：PV Present Value终值：FV Future Value 现值和终值的关系对于一笔数额为m的投资，如果采用复利的方式，每年利率为i，如何计算n年以后的终值呢？ 第一年的FV为：m(1+i) 第二年的FV为：m(1+i)(1+i)=m(1+i)^2 … 第n年的FV为：m(1+i)^n 也就是说，FV=PV(1+i)^n。这样我们就得到了一个现值PV和终值FV的计算公式，就可以利用现值PV，计算终值FV，或者用终值FV来计算现值PV。 用Excel计算现值和终值Excel作为金融学的好基友，提供了计算现值PV和终值FV的函数。内置的终值函数FV截图如下，有5个参数： Rate表示每一期的利率 Nper表示一共的期数 Pmt表示每期存入或支出的资金数量，在单个资金的计算里，设置为0 Pv表示资金的现值 Type与Pmt相关，在这里设置为默认为0 举个例子：现在每个月工资10000元，假设工资每年增长7%，那么20年以后，你的工资会是多少钱？ 如下图，我们直接用v(0.07,20,0,-10000,0)计算即可。注意，上面公式的PV我们设置为-10000,因为Excel自动把PV或者FV默认为现金流出。关于正负号的问题，可以参考Quora上的这篇文章 同样道理，Excel也提供了一个现值函数PV，用来求给定终值FV对应的现值。我们看，PV函数的参数和FV函数基本差不多，用法也差不多。 再举个例子： 你准备一次性拿出一部分钱投资，如果投资利率为7%，你想要在30年后拿到100万，那么现在应该投资多少钱？ 同样道理，我们用pv(0.07,30, 0,-1000000,0)即可。 年金的现值和终值上面我们接触的情况，都是单笔投资，对于一定年限的现值或者终值。在现实生活中，我们也经常会遇到定期投资一定数额（存款定投）或者是定期支出一定数额（房贷车贷）这种情况。这种一定时间内一定期数的款项，被称作年金。 年金：Annuitites 下面这个图表示了一个最简单的年金示意图：每年存入100块，连续存5年。 上面这个年金对应的现值应该怎么计算呢？我们需要按照每一期来计算。 第一期对应的PV为100/(1+i) 第二期对应的PV为100/(1+i)^2 … 第五期对应的PV为100/(1+i)^5 总的现值等于上面5个PV的加和。上面的步骤可以抽象成这个公式： 如果每次的pmti相同的话，我们可以使用等比数列求和公式来得到年金的现值： 我们上面说过，现值和终值的关系是这样的： 再结合上面年金现值的公式，因此年金终值的公式就成为： 看下面这个例子： 现在你准备给孩子在银行买一笔理财金，从明年开始，每年提取出10000块用于孩子的学费，一共6年。银行的理财收益率为5%的情况下，应该买多少？ 我们用上面现值的公式，很容易就可以得到: 再看一个例子： 工作后，你准备每年存10000块到理财产品，年化收益率为5%，那么30年后，你会有多少钱？利用年金的终值公式，我们可以计算出来。 上面两种计算方法公式看起来很麻烦，万一记不住怎么办？ 其实我们在前面计算FV和PV时，提到过有一个PMT参数。我们在前面所讲的年金，实际上就是PMT参数。 因此，如果要计算上面含有年金的PV，可以直接使用这个公式： 1PV(0.05,6,-10000)=50757 类似的，可以用FV结合PMT参数直接求年金的终值。 现值终值全家桶函数不知道大家发现没有，我们上面反复在求FV和PV，其实最终涉及到这么几个参数： PV FV Rate NPer PMT 其实，这5个参数，知道其中任意4个，求剩下的一个，Excel都有相对应的函数。 最常用的应该是PMT和Rate函数。 在这篇文章中，我们计算了等额本息方法下的还款额。实际上我们想一下，要求解的还款额其实就相当于是年金。现值为1500000，终值为0（想象成银行在你这存款）所以，我们不需要用复杂的公式，直接用：1PMT(0.049/12, 360, -1500000, 0) 即可求出每个月要还款7960元。 Rate函数，用来求给定了现值，终值，年金，和期数后，所要求的利率。一个更常用的用法应该是求复合增长率。例如，如果你的公司要求业绩5年翻番，那么平均每年需要增长多少？对于上面这个问题，我们直接用： 1=RATE(5,0,-1,2) 可以得到，每年的增长率为14.87% 总结现值和终值是财务分析里最最基础的概念，如果能深刻理解钱生钱这个理念的话，本篇文章的所有内容也就都不难理解了。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Excel计算还款之理论基础]]></title>
    <url>%2F2018%2F06%2F23%2Fexcel-loan-repayment-basic%2F</url>
    <content type="text"><![CDATA[​ 新开一部分专题，来讲讲Excel在金融建模中的应用。 计划在这个专题里，跟随经典的教材，讲一些日常生活中我们常见的可以和财务以及Excel结合的例子。一方面，可以提高自己的金融知识水平，另一方面，也可以顺手解决一些实际需求。 今天先从还款，也就是loan repayment讲起。 话说小明毕业后来到魔都，经过5年奋斗，终于省吃俭用的攒下了10万块钱。加上家里父母支持的90万，凑够了100万首付。他看中的房子标价250万，他还需要贷款150万。 问题来了，如果小明商业贷款的利率是每年4.9%，计划30年还清，那他每个月需要还多少月供？ 在开始计算之前，我们需要弄清楚偿还贷款的两种方式：等额本金和等额本息法。 等额本金：Even Principal Payments等额本息： Even Total Payments 等额本金等额本金的概念是：每个月的还款包括两部分：本金部分和利息部分。每次还款中的本金部分的数额都是相同的，而利息部分则等于剩余未偿还的本金所产生的利息。以上面的例子为例： 贷款总额150万，360个月偿还，每个月需要还1500000/360=4167元本金 第一个月本金基数为150万，所产生的利息为：1500000*0.049/12=6125 所以第一个月的偿还总额为：4167+6125=10292 到了第2个月 需要偿还的本金依旧是4167元 因为上一个月已经还了4167元本金，因此剩余的本金产生的利息为：(1500000-4167)*0.049/12=6108 所以第二个月的还款总额是：4167+6108=10275 以此类推，一直到最后一个月。 算一算我们就看出来了，等额本金法每个月的还款额是逐渐减少的。每个月减少的数额实际上就是上个月偿还的本金额一个月所产生的利息。用上面的例子来计算，就是4167*0.049/12=17。 用Excel模拟计算出来的结果如下： 等额本息等额本息的概念是：每期还款的数额是不变的。每期还款后，剩下的本金加上当期产生的利息作为一个整体继续计息。 这种方式就是利滚利 假设每期的利率为r贷款金额为p 第一期还款x元，剩余欠款为p(1+r)-x 第二期还款x元，剩余欠款为(p(1+r)-x)*(1+r)-x = p(1+r)^2 -x(1+r) -x 第三期还款x元，剩余欠款为p(1+r)^3- x(1+r)^2- x(1+r) -x 第n期还款x元，剩余欠款为 p(1+r)^n - x(1+r)^(n-1) -x(1+r)^(n-2) - ... - x(1+r) -x 到了第n期，剩余欠款就为0了，因此 p(1+r)^n - x(1+r)^(n-1) -x(1+r)^(n-2) - … - x(1+r) -x = 0利用上面这个公式，以及等比公式求和公式，我们可以推导出： 回到我们题目中的例子，如果采用等额本息的方法，每个月的还款额为：1500000*0.049/12*(1+0.049/12)^360/((1+0.049/12)^360-1)=7691 用Excel模拟出来的结果如下： 两种方法的比较 从实际还款总额来看的话，等额本金法比等额本息法要少。我们上面这个例子，等额本金最终所有还款额为260万，而等额本息的还款总额为286万 从每期还款数目来看的话，等额本金法最初的单期还款数额比等额本息要高很多，初期的资金压力会比较大，但其还款金额会随着时间递减 上面公式看起来都蛮复杂的，那么怎么样用Excel来计算呢？这个我们在下一节继续研究。]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同样的Access，不一样的数据类型]]></title>
    <url>%2F2018%2F06%2F21%2FAccess-version-data-type%2F</url>
    <content type="text"><![CDATA[​ 最近算是和ACCESS彻底杠上了。 其实我一般是不太喜欢用ACCESS的，因为自己不是专门做数据库的，用ACCESS总有一种杀鸡用牛刀的感觉。 不过最近做一个项目，指定要用ACCESS。于是在自己的私人电脑上做了一个小的demo文件。然而，这个文件拷贝到公司电脑上，打开时却报错了： 看这个报错，貌似是因为公司电脑的ACCESS版本不够高？查看了一下公司电脑的版本，已经是2016版了。难道还有比2016版还要高的版本？ 还是老套路，到MSDN上面搜一个报错关键词，查到这个页面，里面提到： This issue occurs if you try to open a database that contains a table that uses the BigInt data type. BigInt support was added to Access 2016. BigInt appears within the table’s data type as Large Number. 也就是说，ACCESS2016版里新增了一个数据类型叫BigInt。如果用以前的ACCESS版本来打开含有BigInt类型的文件，就会报错。 那么问题来了，我的公司电脑已经是2016版的，里面有没有Large Number这个数据类型呢？看了一下，居然没有！为什么呢？ 还有一点：MSDN里说，如果要打开的表格里使用了BigInt这个类型才会报错，可是我的原始文件里也没有用到这个数据类型，为什么也会报错呢？ 这两个问题始终没有得到答案。最后的处理方式是：把私人电脑里的ACCESS数据导出为Excel文件，然后导入到公司电脑上。这也算是一种曲线救国的方式了。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Access</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用ADO导入CSV后部分数据变成NULL，怎么破？]]></title>
    <url>%2F2018%2F06%2F20%2FADO-Text-Driver-Data-Type%2F</url>
    <content type="text"><![CDATA[​ 最近要处理一些数据量比较大的CSV文件，本着能不用ACCESS就不用ACCESS的原则，使用了VBA+ADO联用的方法。 CSV，Comma Separated Value，是一种用逗号分隔不同的值，来保存数据的文本文件 ADO, Active Data Object，可以简单的看作是操作数据库的接口 出现了什么问题？首先要做的一步是把CSV中的数据读取到工作表里。鉴于这不是一篇入门的文章，我们就不在这里介绍基础内容了。 现有的p.csv文件是这个样子： 用下面的这段程序，可以直接把CSV中的数据读入到工作表里。 12345678910111213141516171819Option ExplicitSub main() LoadData "p.csv"End SubPrivate Sub LoadData(strCSVPath As String) Dim strSQL As String, strConnection As String Dim oRst As ADODB.Recordset strConnection = "Provider=Microsoft.ace.oledb.12.0;" &amp; _ "Data Source=" &amp; ThisWorkbook.Path &amp; ";" &amp; _ "Extended Properties= 'text;HDR=Yes;IMEX=1;FMT=Delimited(,)';" Set oRst = New ADODB.Recordset strSQL = "SELECT * FROM " &amp; strCSVPath oRst.Open strSQL, strConnection, adOpenStatic, adLockReadOnly Sheet1.Range("a1").CopyFromRecordset oRst oRst.Close Set oRst = NothingEnd Sub 上面这段代码，可以把当前工作簿目录下的p.csv中的数据内容导入到sheet1工作表里。查看sheet1工作表，发现一个问题：有些单元格是空的，比如第189，195,196行。 再返回到源文件查看对应的行，第一眼看上去是有数据的啊，见下图： 又重复运行了几次脚本，复制出来的数据始终有空行，百思不得其解。 原因在哪里？又盯着看了一会，似乎看出了点端倪。不能被显示出来的数据貌似都很大，都是E9数量级。但看第188行，1.22E9是可以正常显示的。 感觉显示为空单元的数字都太大了，所以没有显示出来。经过LEAF大神的提醒，可以使用Fields.Type来查看数据类型。上面的代码修改为： 1234567891011121314151617181920212223242526Option ExplicitSub main() LoadData "p.csv"End SubPrivate Sub LoadData(strCSVPath As String) Dim strSQL As String, strConnection As String Dim oRst As ADODB.Recordset Dim i As Integer strConnection = "Provider=Microsoft.ace.oledb.12.0;" &amp; _ "Data Source=" &amp; ThisWorkbook.Path &amp; ";" &amp; _ "Extended Properties= 'text;HDR=Yes;IMEX=1;FMT=Delimited(,)';" Set oRst = New ADODB.Recordset strSQL = "SELECT * FROM " &amp; strCSVPath oRst.Open strSQL, strConnection, adOpenStatic, adLockReadOnly '以下为新增代码 '======== For i = 0 To oRst.Fields.Count - 1 Debug.Print oRst.Fields(i).Type, oRst.Fields(i).Name Next i '======== '以上为新增代码 Sheet1.Range("a1").CopyFromRecordset oRst oRst.Close Set oRst = NothingEnd Sub 到立即窗口查看，打印出了下面的内容：123202 账户简称3 金额（元）7 结算日期 也就是说，金额字段对应的数据类型是3。数据类型3又是什么呢？直接在msdn上搜索一下，发现这个页面里说的很清楚： 3对应的是4个字节的正负整数。4个字节大约可以表示从-2^31到2^31之间，大约是-2.15E9到2.15E9。难怪4.7E9显示不出来，因为变量长度溢出了啊。 为什么会出现这个问题？在用ADO读取文本文件的时候，因为文本文件中的数据格式没有被显式指定，所以ADO的文本引擎会先扫描一定的行数，然后给每列推测一个数据类型。 很显然，文中出现的问题就是因为ADO扫描完之后，指定了一个adInteger类型，但后面出现的大的数字已经超出了范围。 那么，ADO会扫描多少行呢？在网上搜了一下，在这个注册表下面有ADO文本引擎的默认设置：[Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Jet\4.0\Engines\Text] 很明显，MaxScanRows的值是25，也就是说Text引擎会扫描25行，然后根据扫描结果指定一个数据类型。 怎么解决？有两种方法。 第一种方法不太推荐，就是直接修改注册表，把MaxScanRows的值修改为足够大。如果想扫描全部内容，就把MaxScanRows的值改为0。 第二种方法更加安全一些，也就是用一个文件Schema.ini来存储文本文件的信息。 Schema.ini一定要与CSV文件在同一个目录下，他包含了下面这些信息： 文件名 文件格式 字段名 字符集 等等 详细的格式设置可以查看这个链接 在这个例子里，我们就在p.csv所在的文件夹创建Schema.ini，然后简单的指定下面的内容即可。 1234[p.csv]Format = CSVDelimitedColNameHeader = TrueMaxScanRows = 0 当然，我们也可以把创建文件的内容加入到ADO脚本里，最后完整的脚本内容就会变成： 12345678910111213141516171819202122232425262728293031323334353637Option ExplicitSub main() CreateIniFile "p.csv" LoadData "p.csv"End SubPrivate Sub LoadData(strCSVPath As String) Dim strSQL As String, strConnection As String Dim oRst As ADODB.Recordset Dim i As Integer strConnection = "Provider=Microsoft.ace.oledb.12.0;" &amp; _ "Data Source=" &amp; ThisWorkbook.Path &amp; ";" &amp; _ "Extended Properties= 'text;HDR=Yes;IMEX=1;FMT=Delimited(,)';" Set oRst = New ADODB.Recordset strSQL = "SELECT * FROM " &amp; strCSVPath oRst.Open strSQL, strConnection, adOpenStatic, adLockReadOnly Sheet1.Range("a1").CopyFromRecordset oRst oRst.Close Set oRst = NothingEnd SubPrivate Sub CreateIniFile(strCSVPath As String) Dim iFreeFile As Integer Dim StrIni As String StrIni = "[" &amp; strCSVPath &amp; "]" &amp; vbCrLf &amp; _ "Format = CSVDelimited" &amp; vbCrLf &amp; _ "ColNameHeader = True" &amp; vbCrLf &amp; _ "MaxScanRows = 0" iFreeFile = FreeFile Open ThisWorkbook.Path &amp; "\Schema.ini" For Output As #iFreeFile Print #iFreeFile, StrIni Close #iFreeFileEnd Sub 再次运行程序，发现之前的空白单元格已经有数字进来了： 总结 VBA还是要多查MSDN ADO里的Field的基本属性要熟练]]></content>
      <categories>
        <category>VBA</category>
      </categories>
      <tags>
        <tag>ADO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用scrapy爬取职位信息]]></title>
    <url>%2F2018%2F06%2F15%2F%E7%94%A8scrapy%E7%88%AC%E5%8F%96%E8%81%8C%E4%BD%8D%E4%BF%A1%E6%81%AF%2F</url>
    <content type="text"><![CDATA[​ 新开一篇，来讲解一个51JOB工作职位的爬取。目标：爬取51JOB上所有与化工相关的职位信息。 工具：scrapy框架+Python3 第一步：安装环境使用： 1virtualenv -p /usr/bin/python3 scrapy_env 来创建一个新的虚拟环境来运行scrapy cd到scrapy_env文件夹，然后执行下面语句来开启虚拟空间： 1~/scrapy_env$ source bin/activate 进入到scrapy_env的虚拟空间后，用pip3 install scrapy来安装scrapy所需要的依赖 创建Scrapy项目使用scrapy startproject来创建项目。 12345678910$ scrapy startproject 51jobError: Project names must begin with a letter and contain onlyletters, numbers and underscores~$ scrapy startproject jobsNew Scrapy project 'jobs', using template directory '/home/ubuntu/scrapy_env/lib/python3.5/site-packages/scrapy/templates/project', created in: /home/ubuntu/jobsYou can start your first spider with: cd jobs scrapy genspider example example.com 然后使用scrapy genspider来创建一个爬虫 123~/jobs$ scrapy genspider JobSpider search.51job.comCreated spider 'JobSpider' using template 'basic' in module: jobs.spiders.JobSpider 这样，项目的框架就搭好了。现在整个项目的目录文件应该是这样子的： 123456789101112131415.├── jobs│ ├── __init__.py│ ├── items.py│ ├── middlewares.py│ ├── pipelines.py│ ├── __pycache__│ │ ├── __init__.cpython-35.pyc│ │ └── settings.cpython-35.pyc│ ├── settings.py│ └── spiders│ ├── __init__.py│ ├── JobSpider.py│ └── __pycache__└── scrapy.cfg 编辑Scrapy文件Scrapy框架极大程度的减少了我们爬虫额代码编写量。对于一个简单的爬虫，我们只需要修改下面几个内容。 首次得打开网页链接：1https://search.51job.com/list/000000,000000,0000,19,9,99,%2B,2,1.html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=1&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare= items.py我们需要获取的每一条招聘内容包括了下面这些信息： 职位名 公司名 工作地点 薪资 发布时间因此，我们需要根据这些来定义一个Item，也就是一条爬取下来的信息。 1234567891011import scrapyclass JobsItem(scrapy.Item): # define the fields for your item here like: # name = scrapy.Field() job_title = scrapy.Field() company = scrapy.Field() job_href = scrapy.Field() location = scrapy.Field() salary = scrapy.Field() post_date = scrapy.Field() 这就好了，讲白了，我们是定义了一个名字叫JobItem的字典，然后给这个字典定义了5个键。 spiders/JobSpider.py确定了我们要获取的信息，我们就可以处理爬虫了。 爬取51job其实非常简单，我们只需要输入指定的关键字，然后点搜索，把返回的网页网址作为起始网址即可。 然后要遵循下面的这个思路： 爬某个页面 把我们所需要的字段信息装载到item里，后面我们要通过pipeline来进行处理 找到下一页的anchor标签的链接地址 如果能找到下一页的话，就递归回到第一步 在解析页面的时候，需要用到scrapy的selector对象的xpath方法。xpath相对于css选择器来说更加复杂一些，但解析效率更高。 1234567891011121314151617181920212223242526272829303132import scrapyfrom jobs.items import JobsItemclass JobspiderSpider(scrapy.Spider): name='jobspider' allowed_domains = ['search.51job.com'] start_urls = [ 'http://search.51job.com/list/000000,000000,0000,19,9,99,%2B,2,1.html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=1&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare='] def parse(self, response): next_page_url = response.xpath('//li[@class="bk"][2]/a/@href') job_list = response.xpath('//*[@id="resultList"]/div[@class="el"]') for each_job in job_list: job_info = JobsItem() job_info['job_title'] = each_job.xpath('.//p[contains(@class,"t1")]/span/a/text()') job_info['company'] = each_job.xpath('.//span[contains(@class,"t2")]/a/text()') job_info['job_href'] = each_job.xpath('.//span[contains(@class,"t2")]/a/@href') job_info['location'] = each_job.xpath('.//span[contains(@class,"t3")]/text()') job_info['salary'] = each_job.xpath('.//span[contains(@class,"t4")]/text()') job_info['post_date'] = each_job.xpath('.//span[contains(@class,"t5")]/text()') # mm-dd for k, v in job_info.items(): if v: job_info[k] = v.extract_first().strip() else: job_info[k] = 'unknown' yield job_info if next_page_url is not None: abs_url = next_page_url.extract_first().strip() yield response.follow(abs_url, callback=self.parse) pipelines.pypipelines用来处理scrapy爬取完页面然后解析出来的item。可以这么理解，pipelines把item处理完之后，会装入到数据库里去。在这里，我们要把数据装入到MYSQL数据库里，并且先不考虑去重等要求。 这需要在MySQL中先建立好DATABASE以及TABLE。 123456789101112131415161718192021222324252627282930# -*- coding: utf-8 -*-import pymysqlimport datetimeclass JobsPipeline(object): def open_spider(self, spider): self.database = pymysql.connect(host='localhost', port=3306, user='xxxxxx', passwd='xxxxxx', db='job_info', charset='utf8') self.cursor = self.database.cursor() self.table = 'jobs' def process_item(self, item, spider): sql_string = 'INSERT INTO &#123;&#125; (job_title, company, job_href, location, salary, post_date, update_datetime) \ VALUES("&#123;&#125;","&#123;&#125;","&#123;&#125;","&#123;&#125;","&#123;&#125;","&#123;&#125;",str_to_date("&#123;&#125;","%Y-%m-%d %H:%i:%s"));' \ .format(self.table, item['job_title'], item['company'], item['job_href'], item['location'], item['salary'], item['post_date'], datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')) try: self.cursor.execute(sql_string) self.database.commit() except: print('error') self.database.rollback() return item settings.py完成上面的处理之后，我们还需要做最后一步，修改settings.py，也就是项目设置。 最主要的是两件事情： 设置默认的请求头设置默认的请求头很简单，只需要找到，修改为下面的内容即可。 12345678910DEFAULT_REQUEST_HEADERS = &#123; 'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'Accept-Language': 'en-US,en;q=0.9', 'Connection':'keep-alive', 'Cookie':'your-cookie-here', 'Host':'search.51job.com', 'Referer':'http://search.51job.com/list/000000,000000,0000,19,9,99,%2B,2,2.html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=1&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare=%27', 'Upgrade-Insecure-Requests':'1', 'User-Agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/65.0.3325.181 Chrome/65.0.3325.181 Safari/537.36',&#125; 那上面这些内容是从哪来的呢？当然是从Chrome浏览器的Request Headers的信息拿出来的。 开启pipelines这个也很简单，把下面这句取消注释即可。 123ITEM_PIPELINES = &#123; 'jobs.pipelines.JobsPipeline': 300,&#125; 最终运行cd到项目的根目录下，注意一定要是根目录，然后执行： 1scrapy crawl jobspider 至此，一个最简单的Scrapy爬虫就写好了。后期还有很多细节要处理，比如数据去重，异常处理，数据分析等等，不过这些我们可以在后面优化，后面我们也会陆续讲解。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>Scrapy</tag>
      </tags>
  </entry>
</search>
